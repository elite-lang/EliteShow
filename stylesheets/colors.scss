$base-colors: (
        'black': #292C33,
        'red': #BF6E7C,
        'white': #95A2BB,
        'green': #88B379,
        'yellow': #D9BD86,
        'blue': #66A5DF,
        'magenta': #C699C5,
        'cyan': #6EC6C6,

        'bright-black': #2D323A,
        'bright-red': #dd8494,
        'bright-white': #adbcd7,
        'bright-green': #9dcc8c,
        'bright-yellow': #e9cc92,
        'bright-blue': #6cb2f0,
        'bright-magenta': #e8b6e7,
        'bright-cyan': #7adada
);

@function to-rgb($color) {
  $RGB: 0;
  @if $color > 0 {
    $RGB: 55 + $color * 40;
  }

  @return $RGB;
}

$extra-colors: (
        'selection-color': rgba(lighten(map-get($base-colors, 'bright-black'), 10%), 0.7)
);

@for $index from 0 through 215 {
  $R: floor($index / 36);
  $G: floor(($index % 36) / 6);
  $B: floor($index % 6);

  $key: $index + 16;
  $value: rgb(to-rgb($R), to-rgb($G), to-rgb($B));

  $extra-colors: map-merge($extra-colors, ($key: $value));
}

$gray-scale-colors: ();
@for $index from 0 through 23 {
  $COLOR: $index * 10 + 8;

  $key: $index + 232;
  $value: rgb($COLOR, $COLOR, $COLOR);

  $gray-scale-colors: map-merge($gray-scale-colors, ($key: $value));
}

$colors: map-merge($base-colors, map-merge($gray-scale-colors, $extra-colors));
